@using PontosWeb.Services.Paginacao;
@model Paginacao<PontosWeb.Models.Produto>

@{
    ViewData["Title"] = "Home Page";
}

@{
    ViewBag.Title = "Pagina Inicial";
}
<br />

@if (TempData["MSG_S"] != null)
{
    <br />
    <p class="alert alert-success">@TempData["MSG_S"]</p>

}
else if (TempData["MSG_D"] != null)
{
    <br />
    <p class="alert alert-danger">@TempData["MSG_D"]</p>
}
<br />


<div class="col-md-12">
    <div class="row justify-content-end">
        <div class="col-md-9">
            <form class="w-100">
                <div class="md-form mt-0">
                    <input id="search" class="form-control form-control-dark " type="search" placeholder="Procurar por nome">
                </div>
            </form>
        </div>

        <div class="col-md-3 text-right">
            <a class="btn btn-dark text-light" onclick="abrirModal(
                '@Url.Action("Cadastrar", "Produto", null, Context.Request.Scheme)')">
                <img src="~/icons/adicionar.svg" />
                Novo produto
            </a>
        </div>
    </div>
</div>
<br />
@if (Model.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-striped text-center">
            <thead class="bg-dark text-light">
                <tr>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.First().Id)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.First().Nome)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.First().Pontos)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.First().Categoria)
                    </th>
                    <th scope="col">Acoes</th>
                </tr>
            </thead>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nome)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Pontos)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Categoria.Nome)
                    </td>
                    <td>
                        <a onclick="abrirModal('@Url.Action("Atualizar", "Produto", new { id = item.Id }, Context.Request.Scheme)')">
                            <img src="~/icons/update.svg" />
                        </a>
                        <a asp-action="Excluir" asp-route-id="@item.Id">
                            <img src="~/icons/delete.svg" />
                        </a>
                    </td>
                </tr>

            }
        </table>
    </div>
    {
        var prevDisabled = !Model.TemPaginaAnterior ? "disabled" : "";
        var nextDisabled = !Model.TemProximaPagina ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PaginaInicial - 1)"
       class="btn btn-dark text-light">
        Anterior
    </a>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PaginaInicial + 1)"
       class="btn btn-dark text-light">
        Proxima
    </a>
       }
else
{
    <span>Nenhum registro encontrado!</span>

}
